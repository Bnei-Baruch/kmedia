%header.subhead#overview
  %h2 Containers
  %p
    -if can?(:create, Container)
      = link_to "New Container", new_admin_container_path, :class => 'btn btn-success btn-large pull-right span2'
    -if can?(:create, VirtualLesson)
      = link_to 'Combine selected containers to VL', combine_admin_containers_path, class: 'btn btn-warning pull-right span2 lesson-combine-selected'
  %h4.clear Filter:&nbsp;
  .subnav
    %ul.nav.nav-pills
      %li
        = content_tag :li, :class => @filter.show_all_selected? do
          = link_to 'All Containers', admin_containers_path(:filter => 'all')
      %li
        = content_tag :li, :class => @filter.filtered_selected? do
          = link_to 'Containers to update', admin_containers_path
      -if can?(:special_admin_features, @containers)
        %li
          = content_tag :li, :class => @filter.secure_changed?, :title => 'Security Level changed by operator' do
            = link_to 'Security changed', admin_containers_path(:filter => 'secure_changed')
        %li
          = content_tag :li, :class => @filter.no_files?, :title => 'No files associated' do
            = link_to 'Empty', admin_containers_path(:filter => 'no_files')
        %li
          = content_tag :li, :class => @filter.lost?, :title => 'No specific catalog associated' do
            = link_to 'Lost', admin_containers_path(:filter =>'lost')
        %li.dropdown#by_security{:class => @filter.by_security?}
          %a.dropdown-toggle{:href => "#by_security", :"data-toggle" => "dropdown"}
            Security
            %b.caret
          %ul.dropdown-menu
            -SECURITY.each do |s|
              %li
                = link_to s[:name].humanize, admin_containers_path(:filter => 'by_security', :security => s[:level])
%section
  = paginate @containers

  %table.table.table-striped.table-bordered.table-condensed.lessons
    %thead
      %tr
        %th
        %th= sortable("id", "ID", @filter.filter)
        %th= sortable("name", "Name", @filter.filter)
        %th= sortable("filmdate", "Filmed", @filter.filter)
        %th= sortable("created_at", "Created", @filter.filter)
        %th= sortable("updated_at", "Updated", @filter.filter)
        %th= sortable("lang", "Language", @filter.filter)
        %th= sortable("secure", "Secure", @filter.filter)
        = display_actions_title_for_containers
    %tbody
      -@containers.each do |container|
        %tr
          %td= check_box_tag "cb_#{container.id}", container.id, false, class: 'selected'
          %td{:class => container.marked_for_merge ? 'btn btn-warning' : ''}= container.id
          %td= container.name.truncate(57, :omission => '&hellip;').html_safe
          %td.created= container.filmdate.try(:to_date)
          %td= container.created_at.try(:to_date)
          %td= container.updated_at.try(:to_date)
          %td= container.lang
          %td= display_secure(container.secure)
          %td= link_to 'Show', admin_container_path(container)
          -if can?(:edit_descriptions, container)
            %td
              = link_to 'Edit', edit_admin_container_path(container)
            %td
              = link_to 'Long Description', edit_long_descr_admin_container_path(container)
              %br
              = link_to 'Transcript', edit_transcript_admin_container_path(container)
          -if can?(:destroy, container)
            %td
              = link_to 'Destroy', admin_container_path(container), :confirm => 'Are you sure?', :method => :delete, :class => 'btn-small btn-danger'
          -if can?(:send_to_censor, container)
            %td
              = link_to 'Censor', send_to_censor_admin_container_path(container, filter: @filter.filter, securty: @security), method: 'post'
