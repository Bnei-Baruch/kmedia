- title "Containers"
%p
  = link_to_if can?(:create, Lesson), "New Container", new_admin_lesson_path do
    .unable New Container
%p.filter
  %span Filter:&nbsp;
  = link_to 'All Containers', admin_lessons_path(:filter => 'all'), :class => show_all_selected?
  |
  = link_to 'Containers for update', admin_lessons_path, :class => filtered_selected?
= paginate @lessons
%br
%table.admin_table.bp
  %thead
    %tr
      %th ID
      %th Name
      %th Created
      %th Updated
      %th Language
      %th Secure
      %th(colspan=4) Actions
  - @lessons.each do |lesson|
    - secure = SECURITY.select{|s| s[:level] == lesson.secure }.first[:name].downcase
    %tr(class="#{cycle('odd', 'even')} #{secure}")
      %td= lesson.lessonid
      %td= lesson.lessonname
      %td.small= lesson.created.try(:to_date)
      %td.small= lesson.updated.try(:to_date)
      %td= lesson.lang
      %td.small= secure
      %td= link_to 'Show', admin_lesson_path(lesson)
      %td
        = link_to_if can?(:update, lesson) || can?(:edit_descriptions, lesson), 'Edit', edit_admin_lesson_path(lesson) do
          .unable Edit
      %td
        = link_to_if can?(:update, lesson) || can?(:edit_descriptions, lesson), 'Long Description', edit_long_descr_admin_lesson_path(lesson) do
          .unable Long Description
      %td
        = link_to_if can?(:destroy, lesson), 'Destroy', admin_lesson_path(lesson), :confirm => 'Are you sure?', :method => :delete do
          .unable Destroy
%br
= paginate @lessons
%br

%p
  = link_to_if can?(:create, Lesson), "New Container", new_admin_lesson_path do
    .unable New Container
