- disabled = cannot? :edit_all_lesson_fields, @lesson

= simple_form_for ['admin', @lesson] do |f|
  = display_actions_with_mark f, admin_lessons_url

  %hr.soften
  = display_errors f
  .row
    .span6.rborder
      - if cannot?(:edit_all_lesson_fields, @lesson)
        .pull-right.auto-parse= link_to 'Automatic parsing', 'javascript:void(0);', :class => 'auto-parse unable'
      - else
        - url = parse_new_lesson_name_admin_lessons_url(:ts => Time.now.to_i)
        :javascript
          $(function () {
            auto_parse();
          });
        .pull-right= link_to 'Automatic parsing', url, :class => 'auto-parse'
      = f.input :lessonname, :label => 'Name', :disabled => disabled, :input_html => {:class => 'span5'}
      = f.input :content_type_id, :collection => @content_types, :label => 'Type', :disabled => disabled, :prompt => '-- Please select container type --', :input_html => {:class => 'span5'}
      = f.input :v_lessondate, :label => 'Date', :disabled => disabled, :order => [:day, :month, :year], :input_html => {:class => 'span2'}
      = f.input :lang, :collection => @languages, :value_method => :code3, :label_method => :to_s, :label => 'Language', :prompt => '-- Please select language --', :disabled => disabled
      = f.input :lecturerid, :collection => @lecturers, :value_method => :lecturerid, :label_method => :lecturername, :label => 'Lecturer', :prompt => '-- Please select lecturer --', :disabled => disabled
      = f.input :secure,:collection =>  @security, :prompt => nil, :label => 'Security Level', :disabled => disabled
    .span6
      .rss.pull-right
        = f.input :rss, :as => :boolean, :disabled => disabled
      .list.clear
        - if disabled
          %p.input.string.optional
            %label(for="lesson_catalog_tokens" class="string optional") Catalogs
            %ul.token-input-list
              - @lesson.catalogs.each do |c|
                %li.token-input-token
                  %p=c.catalognodename
        - else
          = f.input :catalog_tokens, :label => 'Catalogs', :input_html => {"data-pre" => @lesson.catalogs.map{|c| {:id => c.catalognodeid, :name => c.catalognodename}}.to_json}
  %hr.soften
  = display_descriptions f, @lesson_descriptions, 'lesson_descriptions', 'lessondesc'
  %hr.soften
  = display_actions_with_mark f, admin_lessons_url

:javascript
  var rss_catalog = {id: #{@rss.catalognodeid}, name: '#{@rss.catalognodename}' };
